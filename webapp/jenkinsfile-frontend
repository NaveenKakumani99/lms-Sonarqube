pipeline {
    agent {
      label 'lms-slavenode'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('yoursureshdockerhub')
     registry = "yoursureshdockerhub/lms-frontend"
        registryCredential = 'yoursureshdockerhub'
        dockerImage = ''
    }

    stages {
        
        stage('Install zip') {
            steps {
                sh 'sudo apt update'
                sh 'sudo apt install -y zip'
            }
        }

        stage('Release LMS') {
            steps {
                script {
                    echo "Releasing.."       
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version
                    echo "${packageJSONVersion}"  
                    sh "zip -r webapp/dist-0.0.0.zip . -i webapp/dist"
                    sh "curl -v -u admin:admin1 --upload-file webapp/dist-${packageJSONVersion}.zip http://20.235.76.248:8081//repository/lms/"     
            }
            }
        }

        stage('Building the docker image') {
            steps {
                sh 'cd webapp && docker build -t yoursureshdockerhub/lms-frontend .'
            }
        }

        stage('lms-app frontend code quality check with sonarqube') {
            steps {
               
                sh 'docker container run --rm -e SONAR_HOST_URL="http://4.213.1.174:9000" -e SONAR_LOGIN="sqp_13e1c7403efb97927cbaead0ac40974799e29cce" -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms-app'
            }
          
        }



        stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'docker push yoursureshdockerhub/lms-frontend'
            }
        }

        stage('Remove old docker images') {
             steps {
                 sh 'docker rmi -f yoursureshdockerhub/lms-frontend'
            }
        }

         stage('Running the docker container') {
            steps {
                  sh 'docker container rm --force f-end'
                  sh 'docker run -dt -p 8000:80 --name f-end yoursureshdockerhub/lms-frontend'
            }
        }
    }
}
