pipeline {
    agent {
      label 'lms-slave'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('dockerhubcredentials')
     registry = "naveen1016/lms-frontend"
        registryCredential = 'dockerhubcredentials'
        dockerImage = ''
    }

    stages {

        stage('Notify Slack') {
            steps {
                script {
                    slackSend channel: 'jenkins-notifications',
                        color: 'good',
                        message: 'pipeline started - frontend',
                        teamDomain: 'jenkins-project',
                        tokenCredentialId: 'jenkins-project'
                }
            }
        }
        

         stage('sonarqube analysis') {
            steps {
               
                sh 'docker container run --rm -e SONAR_HOST_URL="http://35.75.18.38:9000" -e SONAR_LOGIN="sqp_5552f71195d24db2bd3a3d4733c2fc932b3602b0" -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms'
            }
          
        }       

        stage('Building frontend image') {
            steps {
                sh 'cd webapp && docker build -t naveen1016/lms-frontend .'
            }
        }
    }
}
