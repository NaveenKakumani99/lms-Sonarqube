pipeline {
    agent {
      label 'lms-slave'
    }

    environment {

    DOCKERHUB_CREDENTIALS = credentials('dockerhubcredentials')
     registry = "naveen1016/lms-frontend"
        registryCredential = 'dockerhubcredentials'
        dockerImage = ''
    }

    stages {

         stage('pipeline status') {
            steps {
                script {
                    slackSend channel: 'jenkins-notifications',
                            color: '#ff8c00',
                            message: 'lms-Frontend Pipeline has been Started',
                            tokenCredentialId: 'jenkin-project'
                }
            }
        }
        

         stage('sonarqube analysis') {
            steps {
               
                sh 'docker container run --rm -e SONAR_HOST_URL="http://35.75.18.38:9000" -e SONAR_LOGIN="sqp_5552f71195d24db2bd3a3d4733c2fc932b3602b0" -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms'
            }
          
        }       

        stage('Building frontend image') {
            steps {
                sh 'cd webapp && docker build -t naveen1016/lms-frontend .'
            }
        }

        stage('nexus')  {
            steps {
                script {
                    echo "Releasing.."                           
                    sh "zip webapp/dist-${packageJSONVersion}.zip -r webapp/dist"
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version
                    echo "${packageJSONVersion}"  
                    sh "curl -v -u admin:admin1 --upload-file webapp/dist-${packageJSONVersion}.zip http://35.78.212.74:8081/repository/lmsapplication/"     
            }
            }
        }


      }
}
